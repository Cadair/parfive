# This workflow is designed to allow the build of multiple artifacts and the subsequent upload to pypi.
# Each build step installs the dist and runs tests with pytest --pyargs

name: Publish

on:
  release:
    types:
      - released

env:
  # The name of the python package after install
  PACKAGE: 'dkist'
  # Any extras to install before the tests
  EXTRAS: 'tests'

jobs:
  build-sdist:
    runs-on: ubuntu-latest
    if: github.repository == 'DKISTDC/dkist'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python-build
        run: python -m pip install -U build pip virtualenv

      - name: Build package
        run: python -m build --sdist .

      - name: Test package
        run: |
          cd ..
          echo "::group::Install dist"
          python -m venv testenv
          testenv/bin/pip install -U pip setuptools wheel
          for filename in ${{ github.workspace }}/dist/*; do
            testenv/bin/pip install pytest $filename[$EXTRAS]
          done
          echo "::endgroup::"

          testenv/bin/pytest --pyargs $PACKAGE

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: ${{ github.workspace }}/dist/

  build-wheel:
    runs-on: ubuntu-latest
    if: github.repository == 'DKISTDC/dkist'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python-build
        run: python -m pip install -U build pip virtualenv

      - name: Build package
        run: python -m build --wheel .

      - name: Test package
        run: |
          cd ..
          echo "::group::Install dist"
          python -m venv testenv
          testenv/bin/pip install -U pip setuptools wheel
          for filename in ${{ github.workspace }}/dist/*; do
            testenv/bin/pip install pytest $filename[$EXTRAS]
          done
          echo "::endgroup::"

          testenv/bin/pytest --pyargs $PACKAGE

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: universal-wheel
          path: ${{ github.workspace }}/dist/

  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'DKISTDC/dkist'
    needs:
      - build-sdist
      - build-wheel

    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install twine
        run: python -m pip install -U twine

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts

      - name: Build dist directory
        run: |
          mkdir ./dist
          find ./artifacts -type f -exec mv {} ./dist \;

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
